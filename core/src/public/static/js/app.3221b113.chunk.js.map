{"version":3,"sources":["src/assets/gift_box.png","src/pages/Home/styles.js","src/components/InputPadrao.js","src/components/BtnPrimary.js","src/components/BtnSecondary.js","src/Api.js","src/pages/Home/index.js","src/pages/Preload/styles.js","src/pages/Preload/index.js","src/pages/SignIn/styles.js","src/dao/UserDao.js","src/pages/SignIn/index.js","src/pages/SignUp/styles.js","src/pages/SignUp/index.js","src/stacks/MainStack.js","serviceWorker.js","App.js"],"names":["module","exports","styled","SafeAreaView","Image","Text","View","InputArea","Label","SpanArea","Input","TextInput","txtLabel","placeholder","value","onChangeText","password","placeholderColor","secureTextEntry","BtnPrimary","TouchableOpacity","CustomButtonText","onPress","BtnSecondary","BASE_API","_currentToken","a","async","cookie","load","token","AsyncStorage","getItem","save","path","_guardaToken","setItem","doPost","body","reqParam","method","headers","Accept","JSON","stringify","fetch","resp","console","log","json","status","doGet","user_name","name","email","url","slug","remove","removeItem","useState","addrField","setAddrField","slugField","setSlugField","addr","access","urlList","setUrlList","fieldValidation","setFieldValidation","navigation","useNavigation","buscarURLs","Api","URLs","useEffect","handleChangeField","event","fieldName","target","fleldVal","makeid","checkSlug","length","result","characters","charactersLength","i","charAt","Math","floor","random","ret","isRegistered","Navbar","bg","Brand","href","src","logo","width","height","className","alt","Collapse","id","Nav","Form","inline","Button","variant","onClick","navigate","Row","Col","InputGroup","onChange","t","FormControl","aria-label","aria-describedby","sm","style","color","alert","message","fields_errors","Table","striped","bordered","hover","map","item","key","navigator","clipboard","writeText","Container","LoadingIcon","ActivityIndicator","validaToken","reset","routes","size","ImgLogo","H1Label","BtnArea","validaUserResponse","usernameField","setUsernameField","passwordField","setPasswordField","source","require","type","position","fontSize","marginTop","marginBottom","paddingTop","paddingBottom","backgroundColor","nomeField","setNomeField","emailField","setEmailField","InputPadrao","indValido","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","Preload","SignIn","SignUp","Home","window","addEventListener","serviceWorker","register","then","registration","catch","err","App","NavigationContainer","MainStack"],"mappings":"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","file":"static/js/app.3221b113.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gift_box.9136e068.png\";","import React from 'react';\n\nimport styled from 'styled-components/native';\nexport const Container = styled.SafeAreaView`\n    background-color: #FFFFFF;\n    flex: 1;\n    padding-left: 30px;\n    padding-right: 30px;\n`;\n\nexport const ImgLogo  = styled.Image`\n\twidth: 130px;\n\theight: 95px;\n\tmargin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const H1Label = styled.Text`\n    font-size: 36px;\n    color: #FF5A5A;\n    font-weight: bold;\n`;\n\nexport const LinkLabel = styled.Text`\n    font-size: 14px;\n    color: #FF5A5A;\n    font-weight: bold;\n    margin-top: 5px;\n    margin-left: auto;\n    margin-right: auto;\n  text-decoration: underline;\n  text-decoration-color: #FF5A5A;\n`;\n\n\n\nexport const BtnArea  = styled.View`\n    margin-top: 50px;\n`;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\n\nconst InputArea = styled.View`\n    width: 100%;\n    height: 50px;\n    background-color: #ffffff;\n    flex-direction: row;\n    border-radius:10px;\n    margin-bottom: 15px;\n    align-items: center;\n    border: 1px solid #FF5A5A;\n`;\nexport const Label = styled.Text`\n    font-size: 16px;\n    color: #FF5A5A;\n    margin-bottom: 8px;\n    margin-top: 10px;\n    \n`;\n\nconst SpanArea = styled.View`\n`;\n\nconst Input = styled.TextInput`\n    flex: 1;\n    font-size: 18px;\n    color: #3A527B;\n    margin-left: 10px;\n`;\n\nexport default ( {txtLabel, placeholder, value, onChangeText, password}) => {\n    return (\n        <SpanArea>\n            <Label>{txtLabel}</Label>\n            <InputArea>\n                <Input \n                    placeholder={placeholder}\n                    placeholderColor=\"#FF5A5A\"\n                    value={value}\n                    onChangeText={onChangeText}\n                    secureTextEntry={password}\n                /> \n            </InputArea>\n        </SpanArea>\n    );\n}","import React from 'react';\nimport styled from 'styled-components/native';\n\nexport const BtnPrimary = styled.TouchableOpacity`\n    height: 60px;\n    background-color: #FF5A5A;\n    border-radius: 7px;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid #FFFFFF;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\nexport const CustomButtonText = styled.Text`\n    font-size: 24px;\n    color: #FFFFFF;\n`;\n\n \n\nexport default ( {txtLabel, onPress}) => {\n    return (\n        <BtnPrimary onPress={onPress}>\n            <CustomButtonText>{txtLabel}</CustomButtonText>\n        </BtnPrimary>\n    );\n}","import React from 'react';\nimport styled from 'styled-components/native';\n\nexport const BtnSecondary = styled.TouchableOpacity`\n    height: 60px;\n    background-color: #F8F8F8;\n    border-radius: 7px;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid #F8F8F8;\n    margin-top: 15px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\nexport const CustomButtonText = styled.Text`\n    font-size: 24px;\n    color: #FF5A5A;\n`;\n\nexport default ( {txtLabel, onPress}) => {\n    return (\n        <BtnSecondary onPress={onPress}>\n            <CustomButtonText>{txtLabel}</CustomButtonText>\n        </BtnSecondary>\n    );\n}\n\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { add } from 'react-native-reanimated'; \nimport cookie from 'react-cookies'\n\nconst BASE_API =\"http://localhost:3737\";\n// const BASE_API =\"https://dibr.cc\"; \n\nconst _currentToken = async()=>{\n    let token = await cookie.load('token');\n    if(token)\n        return token;\n    \n    token = await AsyncStorage.getItem('token');\n    await cookie.save('token', token, { path: '/' });\n    return token;\n}\n\nconst _guardaToken = async(token)=>{\n    await cookie.save('token', token, { path: '/' });\n    await AsyncStorage.setItem('token', token);\n}\nconst _removeToken = async()=>{\n    await cookie.remove('token', { path: '/' });\n    await AsyncStorage.removeItem('token');\n}\n\nconst doPost =  async (body, path, token) => {\n    const reqParam={\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n        body: JSON.stringify(body) \n    };\n    const resp = await fetch(`${BASE_API}${path}`, reqParam);\n    console.log(\"Response: \", resp);\n    if(resp.json){\n        console.log(\"status: \"+resp.status);\n        const json = await resp.json();\n        return json;\n    }\n\n    \n    return resp;\n}\n\nconst doGet =  async (path, token) => {\n    const reqParam={\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n    };\n    const resp = await fetch(`${BASE_API}${path}`, reqParam);\n    if(resp.json){\n        const json = await resp.json();\n        console.log(\"status: \"+resp.status);\n        return json;\n    }\n    return resp;\n}\n\nexport default {\n    BASE_API, \n    checkToken: async (token) => {     \n        return await doGet('/api/auth/refresh', token);\n    },\n    signIn: async (user_name, password) => {\n        return  await doPost({user_name, password}, '/api/singin');\n    },\n    logout: async (email, password) => {\n        const token = await _currentToken();\n        return  await doPost({token}, '/api/auth/logout');\n    },\n    signUp: async (name, email, password) => {\n        return await doPost({name, user_name:email, password}, '/api/user');\n    },\n    buscarURLs: async (token) => {     \n        return await doGet('/api/url', token);\n    },\n    novoURL: async (token, url, slug) => {     \n        return await doPost({url, slug}, '/api/url', token);\n    },\n    currentToken: async () => {     \n        return await _currentToken();\n    },\n    guardaToken: async (token) => {     \n        return await _guardaToken(token);\n    },\n    removeToken: async () => {     \n        return await _removeToken();\n    },\n    checkSlug: async (slug) => {\n        const token = await _currentToken();   \n        return await doGet('/api/url/'+slug, token);\n    }\n\n};","import React, {useState, useContext, useEffect} from 'react';\nimport { useNavigation } from '@react-navigation/native'\nimport { ImgLogo,  H1Label, LinkLabel, BtnArea\n} from './styles'\nimport { Text,  StyleSheet } from 'react-native';\nimport InputPadrao from '../../components/InputPadrao';\nimport BtnPrimary from '../../components/BtnPrimary';\nimport BtnSecondary from '../../components/BtnSecondary';\nimport Api from '../../Api';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, InputGroup, FormControl, Button, \n    Nav, Table, Navbar, Form, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport logo from '../../assets/gift_box.png';\nimport md5 from 'md5';\n\nexport default () => {\n     \n    const [addrField, setAddrField] = useState('');\n    const [slugField, setSlugField] = useState('');\n    const [urlList, setUrlList] = useState([{addr:\"http://test.com\", slug:\"\", access: 0}]);\n    const [fieldValidation, setFieldValidation] = useState({slug: true});\n    const navigation = useNavigation();\n\n    const buscarURLs = async ()=>{\n        const token = await AsyncStorage.getItem('token'); \n        if(token ){\n            const URLs = await Api.buscarURLs(token);\n            setUrlList(URLs);\n            return true;\n        }\n        return false;\n    }\n    const novoURL = async (event)=>{\n        if(addrField===''){\n            alert('Informe um URL');\n            return;\n        }\n        if(slugField===''){\n            alert('Informe um Slug');\n            return;\n        }\n        const token = await AsyncStorage.getItem('token'); \n        if(token ){\n            const ret = await Api.novoURL(token, addrField, slugField);\n            console.log('ret');\n            console.log(ret);\n            if(ret.message)\n                alert(ret.message);\n            if(ret.fields_errors){\n                alert(ret.fields_errors[0].message);\n            }\n            buscarURLs();\n            return true;\n        }\n        return false;\n    }\n\n    useEffect(()=>{\n        buscarURLs();\n    },[]);\n\n    const handleChangeField = (event)=>{\n        let fieldName = event.target.name;\n        let fleldVal = event.target.value;\n        if(fieldName == 'URL'){\n            setAddrField(fleldVal);\n            console.log(slugField)\n            if(slugField===''){\n                setSlugField(makeid(5));\n            }\n        }else  if(fieldName == 'slug'){\n            setSlugField(fleldVal); \n            checkSlug(fleldVal);\n        }\n    }\n\n    const makeid = (length)=> {\n        var result           = '';\n        var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    const onSingOut = async ()=>{\n        await Api.removeToken();\n        navigation.navigate('SignIn');\n    }\n\n    const checkSlug = async(fleldVal)=>{\n        const ret = await Api.checkSlug(fleldVal);\n        if(ret && ret.isRegistered){\n            setFieldValidation({...fieldValidation, ...{slug: false}})\n        }else{\n            setFieldValidation({...fieldValidation, ...{slug: true}})\n        }\n    }\n\n    return (\n        <>\n  <Navbar bg=\"dark\">\n    <Navbar.Brand href=\"#home\">\n      <img\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n        alt=\"React Bootstrap logo\"\n      />\n    </Navbar.Brand>\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\"></Nav>\n    <Form inline>\n      <Button variant=\"outline-success\" onClick={onSingOut}>Sair</Button>\n    </Form>\n  </Navbar.Collapse>\n  </Navbar>        \n        <Container>\n            <section className=\"url-shortener\">\n            <h2 className=\"title mb-0\">Encurte seu link:</h2>\n            <form>\n                <Row >\n                    <Col >\n                        <InputGroup className=\"mb-3\" value={addrField} onChange={t=>handleChangeField(t )}>\n                            <FormControl placeholder=\"cole sua url aqui\"\n                                aria-label=\"ole sua url aqui\" aria-describedby=\"basic-addon1\"\n                                name=\"URL\"\n                            />\n                        </InputGroup>\n                    </Col>\n                </Row> \n                <Row>\n                    <Col sm=\"10\">\n                        <InputGroup className=\"mb-3\" value={slugField}  >\n                            <FormControl placeholder=\"apelido\" value={slugField} onChange={t=>handleChangeField(t )}\n                                aria-label=\"apelido\" aria-describedby=\"basic-addon1\"\n                                name=\"slug\" style={ fieldValidation.slug ? {}: {color:'#f00'}}\n                            />\n                        </InputGroup>\n                    </Col>\n                    <Col sm=\"2\">\n                        <Button variant=\"primary\" onClick={novoURL}>Encurtar link</Button>{' '}\n                    </Col>\n                </Row>\n            </form>\n            </section>\n\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>URL</th>\n                    <th>Slug</th>\n                    <th>Acessos</th>\n                    </tr>\n                </thead>\n                <tbody>\n                { urlList.map(\n                        (item) => {\n                            const url = Api.BASE_API+'/'+item.slug;\n                        return (\n                            <tr key={item.slug}> \n                            <td>{item.addr}</td>\n                            <td><a href={url}>{url}</a> \n                               <Button  variant=\"outline-secondary\" onClick={() => {navigator.clipboard.writeText(url)}}>Copy\n                                    </Button>\n                            </td>\n                            <td>{item.access}</td>\n                            </tr> \n                        );\n                        }\n                    )\n                } \n                </tbody>\n            </Table>            \n        </Container>\n        </>\n    );\n}\n\n<Row>\n<Col>1 of 1</Col>\n</Row>","import React from 'react';\n\nimport styled from 'styled-components/native';\nexport const Container = styled.SafeAreaView`\n    background-color: #s3C2D1;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const LoadingIcon = styled.ActivityIndicator`\n    margin-top: 50px;\n`;\n\n","import React, {useEffect, useContext} from 'react';\nimport {Container, LoadingIcon} from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nimport Api from '../../Api';\n\nconst validaToken = async ()=>{\n    const token = await Api.currentToken();\n    if(token ){\n        const json = await Api.checkToken(token);\n   \n        if(!json.token){\n            await Api.removeToken();\n            return false;\n        }\n        // salva o token\n        await Api.guardaToken(json.token);\n        return true;\n    }\n    return false;\n}\nexport default () => {\n    \n    const navigation = useNavigation();\n\n    useEffect(()=>{\n        const checkToken = async  ()=>{\n\n            if( await validaToken()){\n                // goto home\n                navigation.reset({\n                    routes:[{name: 'Home'}]\n                })\n            }else{\n                navigation.navigate('SignIn');\n            }\n\n        }\n        checkToken();\n    },[]);\n    return (\n        <Container>\n            <LoadingIcon size='large' color='#FFFFFF' />       \n        </Container>\n    );\n}","import React from 'react';\n\nimport styled from 'styled-components/native';\nexport const Container = styled.SafeAreaView`\n    background-color: #FFFFFF;\n    flex: 1;\n    padding-left: 30px;\n    padding-right: 30px;\n`;\n\nexport const ImgLogo  = styled.Image`\n\twidth: 130px;\n\theight: 95px;\n\tmargin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const H1Label = styled.Text`\n    font-size: 36px;\n    color: #FF5A5A;\n    font-weight: bold;\n`;\n\nexport const LinkLabel = styled.Text`\n    font-size: 14px;\n    color: #FF5A5A;\n    font-weight: bold;\n    margin-top: 5px;\n    margin-left: auto;\n    margin-right: auto;\n  text-decoration: underline;\n  text-decoration-color: #FF5A5A;\n`;\n\n\n\nexport const BtnArea  = styled.View`\n    margin-top: 50px;\n`;\n","\nimport React from 'react';\nimport Api from '../Api'\n\nexport const validaUserResponse = async (json)=>{\n    console.log(json)\n    console.log(json.token)\n    if(!json.token){\n        return false;\n    }\n    // salva o token\n    await Api.guardaToken(json.token);\n    console.log('#.4');\n    const token = await Api.currentToken();\n    return true;\n}\n\nexport const validaToken = async (userDispatch)=>{\n    const token = await Api.currentToken();\n    if(token ){\n        json = await Api.checkToken(token);\n        return await validaUserResponse(json, userDispatch);\n    }\n    return false;\n}\n\nexport const validarSingUpData = (nome, email, senha)=>{\n    if(nameField =='') return 'Inform seu nome';\n    \n    if(emailField =='')return 'Inform seu e-mail';\n        \n    if(passwordField =='') return 'Inform uma senha valida';\n\n    return false;\n}\n\n","import React, {useState, useContext} from 'react';\nimport { useNavigation } from '@react-navigation/native'\nimport { ImgLogo,  H1Label, LinkLabel, BtnArea\n} from './styles'\nimport { Text,  StyleSheet } from 'react-native';\nimport InputPadrao from '../../components/InputPadrao';\nimport BtnPrimary from '../../components/BtnPrimary';\nimport BtnSecondary from '../../components/BtnSecondary';\nimport Api from '../../Api';\nimport {validaUserResponse} from '../../dao/UserDao';\n\nimport { Container, Row, Col, InputGroup, FormControl, Button, \n    Nav, Table, Navbar, Form} from 'react-bootstrap';\n\nexport default () => {\n    \n    const [usernameField, setUsernameField] = useState('');\n    const [passwordField, setPasswordField] = useState('');\n\n    const navigation = useNavigation();\n    \n    const handleSingClike = async () => {\n        \n        if(usernameField != '' && passwordField != ''){\n            const json = await Api.signIn(usernameField, passwordField);\n            if(await validaUserResponse(json)){\n                // Goto home\n                navigation.reset({routes:[{name: 'Home'}]})\n            }else{\n                alert(\"E-mail e/ou senha invalidos\")\n            }\n        }else{\n            alert(\"Informe email e senha!\")\n        }\n    }\n    const handleSingUpClike = () => {\n        navigation.reset({\n            routes: [{name: 'SignUp'}]\n        })\n    }\n\n    const handleChangeField = (event)=>{\n        let fieldName = event.target.name;\n        let fleldVal = event.target.value;\n        if(fieldName == 'email')\n            setUsernameField(fleldVal);\n        else  if(fieldName == 'password')\n            setPasswordField(fleldVal); \n    }\n\n    return (\n        <Container>\n            <ImgLogo source={require('../../assets/gift_box.png')}\n            />\n            <H1Label>Login</H1Label>\n\n \n            <InputGroup className=\"mb-3\" value={usernameField} onChange={t=>handleChangeField(t )}>\n                <FormControl placeholder=\"Nome de Usuário\"\n                    aria-label=\"Nome de Usuário\" aria-describedby=\"basic-addon1\"\n                    name=\"email\"\n                />\n            </InputGroup> \n            <InputGroup className=\"mb-3\" value={passwordField} onChange={t=>handleChangeField(t )}>\n                <FormControl placeholder=\"Digite sua senha\"\n                    aria-label=\"Digite sua senha\" aria-describedby=\"basic-addon1\"\n                    name=\"password\" type=\"password\"\n                />\n            </InputGroup>\n\n            <BtnArea>\n                <Button variant=\"primary\" onClick={handleSingClike}>Login</Button>\n                <div className=\"login-or\" style={{ position: 'relative',fontSize: '18px',color: '#aaa',marginTop: '10px', marginBottom: '10px',\n                    paddingTop: '10px', paddingBottom: '10px' }}>\n                    <hr className=\"hr-or\" style={{backgroundColor: '#cdcdcd', height: '1px', marginTop: '0px', marginBottom: '0px' }}/>\n                    \n                </div>\n                <Button variant=\"secondary\" onClick={handleSingUpClike}>Registre-se</Button>\n                \n            </BtnArea>\n        </Container>\n    );\n}\n\n","import React from 'react';\n\nimport styled from 'styled-components/native';\nexport const Container = styled.SafeAreaView`\n    background-color: #FFFFFF;\n    flex: 1;\n    padding-left: 30px;\n    padding-right: 30px;\n`;\n\nexport const ImgLogo  = styled.Image`\n\twidth: 130px;\n\theight: 95px;\n\tmargin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const H1Label = styled.Text`\n    font-size: 36px;\n    color: #FF5A5A;\n    font-weight: bold;\n`;\n\nexport const LinkLabel = styled.Text`\n    font-size: 14px;\n    color: #FF5A5A;\n    font-weight: bold;\n    margin-top: 5px;\n    margin-left: auto;\n    margin-right: auto;\n  text-decoration: underline;\n  text-decoration-color: #FF5A5A;\n`;\n\n\n\nexport const BtnArea  = styled.View`\n    margin-top: 50px;\n`;\n","import React, {useState, useContext} from 'react';\nimport { useNavigation } from '@react-navigation/native'\nimport {Container, ImgLogo,  H1Label, LinkLabel, BtnArea\n} from './styles'\nimport { Text,  StyleSheet } from 'react-native';\nimport InputPadrao from '../../components/InputPadrao';\nimport BtnPrimary from '../../components/BtnPrimary';\nimport BtnSecondary from '../../components/BtnSecondary';\nimport Api from '../../Api';\n\nimport {validaUserResponse} from '../../dao/UserDao';\n\nexport default () => {\n    \n    const [nomeField, setNomeField] = useState('');\n    const [emailField, setEmailField] = useState('');\n    const [passwordField, setPasswordField] = useState('');\n\n    const navigation = useNavigation();\n\n    const handleSingUpClike = async () => {\n\n        if(!nomeField || nomeField === ''){\n            alert(\"Informe seu nome: \"+nomeField);\n            return;\n        }\n        if(!emailField || emailField === ''){\n            alert(\"Informe seu E-mail\");\n            return;\n        }\n        if(!passwordField || passwordField === ''){\n            alert(\"Informe a senha.\");\n            return;\n        }\n \n        const json = await Api.signUp(nomeField, emailField,  passwordField);\n        const indValido = await validaUserResponse(json);\n        console.log(\"validaUserResponse: \"+indValido);\n        if(indValido){\n            // Goto home\n            navigation.reset({routes:[{name: 'Home'}]})\n        }else{\n            alert(\"Erro no cadastro\")\n        }\n      \n    }\n    const handleSingClike = () => {\n        navigation.reset({\n            routes: [{name: 'SignIn'}]\n        })\n    }\n\n    return (\n        <Container>\n            <ImgLogo source={require('../../assets/gift_box.png')}\n            />\n            <H1Label>Registrar</H1Label>\n\n            <InputPadrao txtLabel=\"Nome Completo\" placeholder=\"Digite seu nome\"\n                    value={nomeField} onChangeText={t=>setNomeField(t)} />  \n            <InputPadrao txtLabel=\"E-Mail\" placeholder=\"Digite seu e-mail\"\n                    value={emailField} onChangeText={t=>setEmailField(t)} />  \n            <InputPadrao txtLabel=\"Senha\" placeholder=\"Digite sua senha\" password={true}\n                    value={passwordField} onChangeText={t=>setPasswordField(t)} /> \n            \n            <BtnArea>\n                <BtnPrimary txtLabel=\"Registre-se\" onPress={handleSingUpClike}></BtnPrimary>        \n                <BtnSecondary txtLabel=\"Login\" onPress={handleSingClike}></BtnSecondary>   \n            </BtnArea>\n        </Container>\n    );\n}\n\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from '../pages/Home';\nimport Preload from '../pages/Preload';\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\n\nconst Stack = createStackNavigator();\n\nexport  default () => (\n    <Stack.Navigator\n        initialRouteName=\"Preload\"\n        screenOptions={{\n            headerShown: false\n        }}\n    >\n        <Stack.Screen name=\"Preload\" component={Preload} /> \n        <Stack.Screen name=\"SignIn\" component={SignIn} /> \n        <Stack.Screen name=\"SignUp\" component={SignUp} /> \n        <Stack.Screen name=\"Home\" component={Home} /> \n    </Stack.Navigator>\n);","export const registerServiceWorker = () => {\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', function () {\n        navigator.serviceWorker.register('/sw.js').then(function (registration) {\n          // Registration was successful\n          //console.log('ServiceWorker registration successful with scope: ', registration.scope);\n        }).catch(function (err) {\n          // registration failed :(\n          //console.log('ServiceWorker registration failed: ', err);\n        });\n      });\n    }\n  }","import React from 'react';  \nimport MainStack from './src/stacks/MainStack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { registerServiceWorker } from './serviceWorker'\nregisterServiceWorker();\n\nfunction App() {\n  return (  \n    <NavigationContainer>\n      <MainStack/>\n    </NavigationContainer> \n  );\n}\n\n\n \n\nexport default   App;\n"],"sourceRoot":""}